# Generated by Django 5.1.6 on 2025-04-16 12:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('confirmation_token', models.CharField(blank=True, max_length=100, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Newsletter Subscriber',
                'verbose_name_plural': 'Newsletter Subscribers',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('logo', models.ImageField(upload_to='partners/')),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('partner_type', models.CharField(choices=[('health', 'Healthcare'), ('tech', 'Technology'), ('academic', 'Academic'), ('ngo', 'NGO'), ('government', 'Government'), ('corporate', 'Corporate')], default='health', max_length=50)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partners',
                'ordering': ['partner_type', 'order'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=150)),
                ('bio', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='team/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(blank=True, max_length=150)),
                ('company', models.CharField(blank=True, max_length=150)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('content', models.TextField()),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='contact',
            options={'ordering': ['-created_at'], 'verbose_name': 'Contact', 'verbose_name_plural': 'Contacts'},
        ),
        migrations.AlterModelOptions(
            name='faq',
            options={'ordering': ['category', 'order'], 'verbose_name': 'FAQ', 'verbose_name_plural': 'FAQs'},
        ),
        migrations.AddField(
            model_name='contact',
            name='is_read',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='contact',
            name='phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='contact',
            name='responded',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='contact',
            name='responded_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='contact',
            name='responded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_responses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='faq',
            name='category',
            field=models.CharField(blank=True, help_text='Category for grouping FAQs', max_length=100),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='alternate_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='app_store_link',
            field=models.URLField(blank=True, help_text='iOS App Store link'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='favicon',
            field=models.ImageField(blank=True, null=True, upload_to='site/'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='site/'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='maintenance_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='meta_description',
            field=models.TextField(blank=True, help_text='Site meta description for SEO'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='meta_keywords',
            field=models.TextField(blank=True, help_text='Comma separated keywords for SEO'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='play_store_link',
            field=models.URLField(blank=True, help_text='Google Play Store link'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='social_tiktok',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='support_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='tagline',
            field=models.CharField(blank=True, help_text='A short tagline for the site', max_length=200),
        ),
    ]
